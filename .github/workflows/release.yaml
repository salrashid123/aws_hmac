name: Release

on:
  push:
    tags:
      - '*'

env:
  AWS_REGION : us-east-1
  AWS_ROLE_SESSION_NAME: mysession

permissions:
      id-token: write
      contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:


      - name: Install a swtpm
        run: |
          sudo apt-get update && sudo apt-get -y install swtpm swtpm-tools

      - name: run swtpm
        run: |
          mkdir /tmp/myvtpm && /usr/share/swtpm/swtpm-create-user-config-files && swtpm_setup --tpmstate /tmp/myvtpm --tpm2 --create-ek-cert && swtpm socket --tpmstate dir=/tmp/myvtpm --tpm2 --server type=tcp,port=2321 --ctrl type=tcp,port=2322 --flags not-need-init,startup-clear &

      - name: Check out code
        uses: actions/checkout@v4

      - name: configure aws credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::291738886548:role/GitHubAction-AssumeRoleWithAction.
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
          output-credentials: true
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'tpm/go.mod'

      - name: Run tests
        run: go test -v ./...
        env:

          # AWS_ACCESS_KEY_ID: ${{ steps.creds.outputs.aws-access-key-id }}
          # AWS_SECRET_ACCESS_KEY: ${{ steps.creds.outputs.aws-secret-access-key }}
          # AWS_SESSION_TOKEN: ${{ steps.creds.outputs.aws-session-token }}
          # AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
          # AWS_ROLE_SESSION_NAME: ${{  env.AWS_ROLE_SESSION_NAME }}   

          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}    
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ARN: ${{ secrets.AWS_ACCOUNT_ARN }}                    
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ROLE_SESSION_ARN: ${{ secrets.AWS_ROLE_SESSION_ARN }} 
          AWS_ROLE_SESSION_NAME: ${{ secrets.AWS_ROLE_SESSION_NAME }}     
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}       

        working-directory: tpm

  release:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set Versions
        uses: actions/github-script@v4
        id: set_version
        with:
          script: |
            const tag = context.ref.substring(10)
            const no_v = tag.replace('v', '')
            const dash_index = no_v.lastIndexOf('-')
            const no_dash = (dash_index > -1) ?  no_v.substring(0, dash_index) : no_v
            core.setOutput('tag', tag)
            core.setOutput('no-v', no_v)
            core.setOutput('no-dash', no_dash)
      - name: Set up Go
        uses: actions/setup-go@v5

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_SIGNING_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - uses: sigstore/cosign-installer@v3.8.0 # installs cosign
      - uses: anchore/sbom-action/download-syft@v0.18.0 # installs syft
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}
